{
  "address": "0xCae5e615455196bF3de826FE8f7fBA8efAf19574",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPriorityFee",
          "type": "uint256"
        }
      ],
      "name": "changeMaxPriorityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_relayerFee",
          "type": "uint256"
        }
      ],
      "name": "changeRelayerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "changeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPriorityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "method",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "withdrawToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "recoverFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "functionData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "refundAccount",
          "type": "address"
        }
      ],
      "name": "relay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relayerFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxPriorityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_relayerFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes4",
          "name": "_method",
          "type": "bytes4"
        }
      ],
      "name": "setup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6b52df593073a026a1fb1e9523e92365",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPriorityFee\",\"type\":\"uint256\"}],\"name\":\"changeMaxPriorityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_relayerFee\",\"type\":\"uint256\"}],\"name\":\"changeRelayerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPriorityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"method\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"withdrawToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"refundAccount\",\"type\":\"address\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxPriorityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"_method\",\"type\":\"bytes4\"}],\"name\":\"setup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ux\\u00edo Fuentefr\\u00eda - <uxio@safe.global>\",\"custom:experimental\":\"This is an experimental contract.\",\"kind\":\"dev\",\"methods\":{\"changeMaxPriorityFee(uint256)\":{\"params\":{\"_maxPriorityFee\":\"New MaxPriorityFee clients will be paying\"}},\"changeRelayerFee(uint256)\":{\"params\":{\"_relayerFee\":\"New Relayer fee\"}},\"changeToken(address)\":{\"params\":{\"_token\":\"New token for paying refunds\"}},\"constructor\":{\"details\":\"Init contract\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverFunds(address,address)\":{\"details\":\"Ether recovery is not implemented as contract is not payable\",\"params\":{\"target\":\"destination for the funds\",\"withdrawToken\":\"token to recover\"}},\"relay(address,bytes,address)\":{\"details\":\"It's responsability of the sender to check if the Safe has enough funds to pay\",\"params\":{\"functionData\":\"ABI encoded Safe `execTransaction` without the method selector\",\"target\":\"destination for the refund\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setup(address,uint256,uint256,bytes4)\":{\"details\":\"Init contract\",\"params\":{\"_maxPriorityFee\":\"MaxPriorityFee clients will be paying, so relayer cannot be abused to drain user funds\",\"_method\":\"Method id that will be called on the Safe\",\"_relayerFee\":\"Relayer fee that will be added to the gasPrice when calculating refunds\",\"_token\":\"Token for paying refunds. Should be the wrapped version of the base currency (e.g. WETH for mainnet)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Safe Relayer - A relayer for Safe multisig wallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recoverFunds(address,address)\":{\"notice\":\"Recover tokens sent by mistake to this contract\"},\"relay(address,bytes,address)\":{\"notice\":\"Relay a transaction and get refunded\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Relayer.sol\":\"Relayer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Relayer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/// @title Safe Relayer - A relayer for Safe multisig wallet\\n/// @author Ux\\u00edo Fuentefr\\u00eda - <uxio@safe.global>\\n/// @custom:experimental This is an experimental contract.\\ncontract Relayer is Ownable {\\n    IERC20 public token;\\n    uint256 public maxPriorityFee;\\n    uint256 public relayerFee;\\n    bytes4 public method;\\n\\n    /// @dev Init contract\\n    constructor() {\\n        // Prevent issues with deterministic deployment\\n        // solhint-disable-next-line avoid-tx-origin\\n        transferOwnership(tx.origin);\\n    }\\n\\n    /// @dev Init contract\\n    /// @param _token Token for paying refunds. Should be the wrapped version of the base currency (e.g. WETH for mainnet)\\n    /// @param _maxPriorityFee MaxPriorityFee clients will be paying, so relayer cannot be abused to drain user funds\\n    /// @param _relayerFee Relayer fee that will be added to the gasPrice when calculating refunds\\n    /// @param _method Method id that will be called on the Safe\\n    function setup(\\n        IERC20 _token,\\n        uint256 _maxPriorityFee,\\n        uint256 _relayerFee,\\n        bytes4 _method\\n    ) external onlyOwner {\\n        // Setup can only be called once\\n        require(address(token) == address(0), \\\"Setup was already called\\\");\\n        changeToken(_token);\\n        changeMaxPriorityFee(_maxPriorityFee);\\n        changeRelayerFee(_relayerFee);\\n        method = _method;\\n    }\\n\\n    /// @param _token New token for paying refunds\\n    function changeToken(IERC20 _token) public onlyOwner {\\n        require(address(_token) != address(0), \\\"Token cannot be empty\\\");\\n        token = _token;\\n    }\\n\\n    /// @param _maxPriorityFee New MaxPriorityFee clients will be paying\\n    function changeMaxPriorityFee(uint256 _maxPriorityFee) public onlyOwner {\\n        require(_maxPriorityFee > 0, \\\"MaxPriorityFee must be higher than 0\\\");\\n        maxPriorityFee = _maxPriorityFee;\\n    }\\n\\n    /// @param _relayerFee New Relayer fee\\n    function changeRelayerFee(uint256 _relayerFee) public onlyOwner {\\n        relayerFee = _relayerFee;\\n    }\\n\\n    /// @notice Recover tokens sent by mistake to this contract\\n    /// @dev Ether recovery is not implemented as contract is not payable\\n    /// @param withdrawToken token to recover\\n    /// @param target destination for the funds\\n    function recoverFunds(IERC20 withdrawToken, address target)\\n        public\\n        onlyOwner\\n    {\\n        withdrawToken.transfer(target, withdrawToken.balanceOf(address(this)));\\n    }\\n\\n    /// @notice Relay a transaction and get refunded\\n    /// @dev It's responsability of the sender to check if the Safe has enough funds to pay\\n    /// @param target Safe to call\\n    /// @param functionData ABI encoded Safe `execTransaction` without the method selector\\n    /// @param target destination for the refund\\n    function relay(\\n        address target,\\n        bytes calldata functionData,\\n        address refundAccount\\n    ) external {\\n        // 9k are for the token transfers + 21k base + data (8 bytes method + 32 bytes address + data)\\n        // We will use 14 as the gas price per data byte, to avoid overcharging too much\\n        uint256 gas = gasleft();\\n        uint256 txMaxPriorityFee = tx.gasprice - block.basefee;\\n        require(\\n            txMaxPriorityFee <= maxPriorityFee,\\n            \\\"maxPriorityFee is higher than expected\\\"\\n        );\\n\\n        uint256 additionalGas = 30000 + (40 + functionData.length) * 14;\\n        uint256 gasPrice = tx.gasprice + relayerFee;\\n\\n        // The method id is appended by the contract to avoid that another method is called\\n        bytes memory data = abi.encodePacked(method, functionData);\\n        bool success;\\n        // Assembly reduced the costs by 400 gas\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            success := call(\\n                sub(gas(), 12000),\\n                target,\\n                0,\\n                add(data, 0x20),\\n                mload(data),\\n                0,\\n                0\\n            )\\n        }\\n        require(success, \\\"Could not successfully call target\\\");\\n\\n        // It's responsability of the sender to check if the Safe has enough funds to pay\\n        address refundTarget = refundAccount == address(0)\\n            ? msg.sender\\n            : refundAccount;\\n        require(\\n            token.transferFrom(\\n                target,\\n                refundTarget,\\n                (gas - gasleft() + additionalGas) * gasPrice\\n            ),\\n            \\\"Could not refund sender\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x3a5b6eef6f10f868ccc37e9464afc791d17121d2122e11e6e0d45215262c0093\",\"license\":\"LGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000032620000266200004960201b60201c565b6200005160201b60201c565b62000043326200011560201b60201c565b62000381565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000125620001ac60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000198576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018f90620002ed565b60405180910390fd5b620001a9816200005160201b60201c565b50565b620001bc6200004960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001e26200023d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000232906200035f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620002d560268362000266565b9150620002e28262000277565b604082019050919050565b600060208201905081810360008301526200030881620002c6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006200034760208362000266565b915062000354826200030f565b602082019050919050565b600060208201905081810360008301526200037a8162000338565b9050919050565b61153e80620003916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780638da5cb5b116100665780638da5cb5b146101c4578063b51f5e92146101e2578063f2fde38b146101fe578063fc0c546a1461021a576100cf565b8063715018a614610180578063758b54dc1461018a57806380184e12146101a6576100cf565b8063127b5c7f146100d457806317d026e6146100f057806324ae6a271461010c5780632c383a9f146101285780632fdeb1111461014657806366829b1614610164575b600080fd5b6100ee60048036038101906100e99190610a68565b610238565b005b61010a60048036038101906101059190610a68565b61028d565b005b61012660048036038101906101219190610b31565b61029f565b005b6101306103c1565b60405161013d9190610bac565b60405180910390f35b61014e6103d4565b60405161015b9190610bd6565b60405180910390f35b61017e60048036038101906101799190610bf1565b6103da565b005b610188610496565b005b6101a4600480360381019061019f9190610c4a565b6104aa565b005b6101ae610582565b6040516101bb9190610bd6565b60405180910390f35b6101cc610588565b6040516101d99190610cc0565b60405180910390f35b6101fc60048036038101906101f79190610d40565b6105b1565b005b61021860048036038101906102139190610db4565b610834565b005b6102226108b8565b60405161022f9190610e40565b60405180910390f35b6102406108de565b60008111610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a90610ede565b60405180910390fd5b8060028190555050565b6102956108de565b8060038190555050565b6102a76108de565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102fd9190610cc0565b60206040518083038186803b15801561031557600080fd5b505afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d9190610f13565b6040518363ffffffff1660e01b815260040161036a929190610f40565b602060405180830381600087803b15801561038457600080fd5b505af1158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190610fa1565b505050565b600460009054906101000a900460e01b81565b60035481565b6103e26108de565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610452576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104499061101a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61049e6108de565b6104a8600061095c565b565b6104b26108de565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611086565b60405180910390fd5b61054c846103da565b61055583610238565b61055e8261028d565b80600460006101000a81548163ffffffff021916908360e01c021790555050505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60005a90506000483a6105c491906110d5565b905060025481111561060b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106029061117b565b60405180910390fd5b6000600e86869050602861061f919061119b565b61062991906111f1565b617530610636919061119b565b905060006003543a610648919061119b565b90506000600460009054906101000a900460e01b8888604051602001610670939291906112ab565b6040516020818303038152906040529050600080600083516020850160008e612ee05a03f19050806106d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ce90611347565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146107125787610714565b335b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8c8387895a8d61076491906110d5565b61076e919061119b565b61077891906111f1565b6040518463ffffffff1660e01b815260040161079693929190611367565b602060405180830381600087803b1580156107b057600080fd5b505af11580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190610fa1565b610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e906113ea565b60405180910390fd5b5050505050505050505050565b61083c6108de565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a39061147c565b60405180910390fd5b6108b58161095c565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108e6610a20565b73ffffffffffffffffffffffffffffffffffffffff16610904610588565b73ffffffffffffffffffffffffffffffffffffffff161461095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610951906114e8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000819050919050565b610a4581610a32565b8114610a5057600080fd5b50565b600081359050610a6281610a3c565b92915050565b600060208284031215610a7e57610a7d610a28565b5b6000610a8c84828501610a53565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac082610a95565b9050919050565b6000610ad282610ab5565b9050919050565b610ae281610ac7565b8114610aed57600080fd5b50565b600081359050610aff81610ad9565b92915050565b610b0e81610ab5565b8114610b1957600080fd5b50565b600081359050610b2b81610b05565b92915050565b60008060408385031215610b4857610b47610a28565b5b6000610b5685828601610af0565b9250506020610b6785828601610b1c565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ba681610b71565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b610bd081610a32565b82525050565b6000602082019050610beb6000830184610bc7565b92915050565b600060208284031215610c0757610c06610a28565b5b6000610c1584828501610af0565b91505092915050565b610c2781610b71565b8114610c3257600080fd5b50565b600081359050610c4481610c1e565b92915050565b60008060008060808587031215610c6457610c63610a28565b5b6000610c7287828801610af0565b9450506020610c8387828801610a53565b9350506040610c9487828801610a53565b9250506060610ca587828801610c35565b91505092959194509250565b610cba81610ab5565b82525050565b6000602082019050610cd56000830184610cb1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d0057610cff610cdb565b5b8235905067ffffffffffffffff811115610d1d57610d1c610ce0565b5b602083019150836001820283011115610d3957610d38610ce5565b5b9250929050565b60008060008060608587031215610d5a57610d59610a28565b5b6000610d6887828801610b1c565b945050602085013567ffffffffffffffff811115610d8957610d88610a2d565b5b610d9587828801610cea565b93509350506040610da887828801610b1c565b91505092959194509250565b600060208284031215610dca57610dc9610a28565b5b6000610dd884828501610b1c565b91505092915050565b6000819050919050565b6000610e06610e01610dfc84610a95565b610de1565b610a95565b9050919050565b6000610e1882610deb565b9050919050565b6000610e2a82610e0d565b9050919050565b610e3a81610e1f565b82525050565b6000602082019050610e556000830184610e31565b92915050565b600082825260208201905092915050565b7f4d61785072696f72697479466565206d7573742062652068696768657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b6000610ec8602483610e5b565b9150610ed382610e6c565b604082019050919050565b60006020820190508181036000830152610ef781610ebb565b9050919050565b600081519050610f0d81610a3c565b92915050565b600060208284031215610f2957610f28610a28565b5b6000610f3784828501610efe565b91505092915050565b6000604082019050610f556000830185610cb1565b610f626020830184610bc7565b9392505050565b60008115159050919050565b610f7e81610f69565b8114610f8957600080fd5b50565b600081519050610f9b81610f75565b92915050565b600060208284031215610fb757610fb6610a28565b5b6000610fc584828501610f8c565b91505092915050565b7f546f6b656e2063616e6e6f7420626520656d7074790000000000000000000000600082015250565b6000611004601583610e5b565b915061100f82610fce565b602082019050919050565b6000602082019050818103600083015261103381610ff7565b9050919050565b7f53657475702077617320616c72656164792063616c6c65640000000000000000600082015250565b6000611070601883610e5b565b915061107b8261103a565b602082019050919050565b6000602082019050818103600083015261109f81611063565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110e082610a32565b91506110eb83610a32565b9250828210156110fe576110fd6110a6565b5b828203905092915050565b7f6d61785072696f7269747946656520697320686967686572207468616e20657860008201527f7065637465640000000000000000000000000000000000000000000000000000602082015250565b6000611165602683610e5b565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b60006111a682610a32565b91506111b183610a32565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111e6576111e56110a6565b5b828201905092915050565b60006111fc82610a32565b915061120783610a32565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112405761123f6110a6565b5b828202905092915050565b6000819050919050565b61126661126182610b71565b61124b565b82525050565b600081905092915050565b82818337600083830152505050565b6000611292838561126c565b935061129f838584611277565b82840190509392505050565b60006112b78286611255565b6004820191506112c8828486611286565b9150819050949350505050565b7f436f756c64206e6f74207375636365737366756c6c792063616c6c207461726760008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000611331602283610e5b565b915061133c826112d5565b604082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600060608201905061137c6000830186610cb1565b6113896020830185610cb1565b6113966040830184610bc7565b949350505050565b7f436f756c64206e6f7420726566756e642073656e646572000000000000000000600082015250565b60006113d4601783610e5b565b91506113df8261139e565b602082019050919050565b60006020820190508181036000830152611403816113c7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611466602683610e5b565b91506114718261140a565b604082019050919050565b6000602082019050818103600083015261149581611459565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114d2602083610e5b565b91506114dd8261149c565b602082019050919050565b60006020820190508181036000830152611501816114c5565b905091905056fea264697066735822122095c16676278acc67e79aecc9dc6150bb40d04245d0d61dd75140b7ade2803b1a64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c5780638da5cb5b116100665780638da5cb5b146101c4578063b51f5e92146101e2578063f2fde38b146101fe578063fc0c546a1461021a576100cf565b8063715018a614610180578063758b54dc1461018a57806380184e12146101a6576100cf565b8063127b5c7f146100d457806317d026e6146100f057806324ae6a271461010c5780632c383a9f146101285780632fdeb1111461014657806366829b1614610164575b600080fd5b6100ee60048036038101906100e99190610a68565b610238565b005b61010a60048036038101906101059190610a68565b61028d565b005b61012660048036038101906101219190610b31565b61029f565b005b6101306103c1565b60405161013d9190610bac565b60405180910390f35b61014e6103d4565b60405161015b9190610bd6565b60405180910390f35b61017e60048036038101906101799190610bf1565b6103da565b005b610188610496565b005b6101a4600480360381019061019f9190610c4a565b6104aa565b005b6101ae610582565b6040516101bb9190610bd6565b60405180910390f35b6101cc610588565b6040516101d99190610cc0565b60405180910390f35b6101fc60048036038101906101f79190610d40565b6105b1565b005b61021860048036038101906102139190610db4565b610834565b005b6102226108b8565b60405161022f9190610e40565b60405180910390f35b6102406108de565b60008111610283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027a90610ede565b60405180910390fd5b8060028190555050565b6102956108de565b8060038190555050565b6102a76108de565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102fd9190610cc0565b60206040518083038186803b15801561031557600080fd5b505afa158015610329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034d9190610f13565b6040518363ffffffff1660e01b815260040161036a929190610f40565b602060405180830381600087803b15801561038457600080fd5b505af1158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190610fa1565b505050565b600460009054906101000a900460e01b81565b60035481565b6103e26108de565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610452576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104499061101a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61049e6108de565b6104a8600061095c565b565b6104b26108de565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611086565b60405180910390fd5b61054c846103da565b61055583610238565b61055e8261028d565b80600460006101000a81548163ffffffff021916908360e01c021790555050505050565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60005a90506000483a6105c491906110d5565b905060025481111561060b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106029061117b565b60405180910390fd5b6000600e86869050602861061f919061119b565b61062991906111f1565b617530610636919061119b565b905060006003543a610648919061119b565b90506000600460009054906101000a900460e01b8888604051602001610670939291906112ab565b6040516020818303038152906040529050600080600083516020850160008e612ee05a03f19050806106d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ce90611347565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146107125787610714565b335b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8c8387895a8d61076491906110d5565b61076e919061119b565b61077891906111f1565b6040518463ffffffff1660e01b815260040161079693929190611367565b602060405180830381600087803b1580156107b057600080fd5b505af11580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190610fa1565b610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e906113ea565b60405180910390fd5b5050505050505050505050565b61083c6108de565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a39061147c565b60405180910390fd5b6108b58161095c565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108e6610a20565b73ffffffffffffffffffffffffffffffffffffffff16610904610588565b73ffffffffffffffffffffffffffffffffffffffff161461095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610951906114e8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000819050919050565b610a4581610a32565b8114610a5057600080fd5b50565b600081359050610a6281610a3c565b92915050565b600060208284031215610a7e57610a7d610a28565b5b6000610a8c84828501610a53565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ac082610a95565b9050919050565b6000610ad282610ab5565b9050919050565b610ae281610ac7565b8114610aed57600080fd5b50565b600081359050610aff81610ad9565b92915050565b610b0e81610ab5565b8114610b1957600080fd5b50565b600081359050610b2b81610b05565b92915050565b60008060408385031215610b4857610b47610a28565b5b6000610b5685828601610af0565b9250506020610b6785828601610b1c565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610ba681610b71565b82525050565b6000602082019050610bc16000830184610b9d565b92915050565b610bd081610a32565b82525050565b6000602082019050610beb6000830184610bc7565b92915050565b600060208284031215610c0757610c06610a28565b5b6000610c1584828501610af0565b91505092915050565b610c2781610b71565b8114610c3257600080fd5b50565b600081359050610c4481610c1e565b92915050565b60008060008060808587031215610c6457610c63610a28565b5b6000610c7287828801610af0565b9450506020610c8387828801610a53565b9350506040610c9487828801610a53565b9250506060610ca587828801610c35565b91505092959194509250565b610cba81610ab5565b82525050565b6000602082019050610cd56000830184610cb1565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610d0057610cff610cdb565b5b8235905067ffffffffffffffff811115610d1d57610d1c610ce0565b5b602083019150836001820283011115610d3957610d38610ce5565b5b9250929050565b60008060008060608587031215610d5a57610d59610a28565b5b6000610d6887828801610b1c565b945050602085013567ffffffffffffffff811115610d8957610d88610a2d565b5b610d9587828801610cea565b93509350506040610da887828801610b1c565b91505092959194509250565b600060208284031215610dca57610dc9610a28565b5b6000610dd884828501610b1c565b91505092915050565b6000819050919050565b6000610e06610e01610dfc84610a95565b610de1565b610a95565b9050919050565b6000610e1882610deb565b9050919050565b6000610e2a82610e0d565b9050919050565b610e3a81610e1f565b82525050565b6000602082019050610e556000830184610e31565b92915050565b600082825260208201905092915050565b7f4d61785072696f72697479466565206d7573742062652068696768657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b6000610ec8602483610e5b565b9150610ed382610e6c565b604082019050919050565b60006020820190508181036000830152610ef781610ebb565b9050919050565b600081519050610f0d81610a3c565b92915050565b600060208284031215610f2957610f28610a28565b5b6000610f3784828501610efe565b91505092915050565b6000604082019050610f556000830185610cb1565b610f626020830184610bc7565b9392505050565b60008115159050919050565b610f7e81610f69565b8114610f8957600080fd5b50565b600081519050610f9b81610f75565b92915050565b600060208284031215610fb757610fb6610a28565b5b6000610fc584828501610f8c565b91505092915050565b7f546f6b656e2063616e6e6f7420626520656d7074790000000000000000000000600082015250565b6000611004601583610e5b565b915061100f82610fce565b602082019050919050565b6000602082019050818103600083015261103381610ff7565b9050919050565b7f53657475702077617320616c72656164792063616c6c65640000000000000000600082015250565b6000611070601883610e5b565b915061107b8261103a565b602082019050919050565b6000602082019050818103600083015261109f81611063565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110e082610a32565b91506110eb83610a32565b9250828210156110fe576110fd6110a6565b5b828203905092915050565b7f6d61785072696f7269747946656520697320686967686572207468616e20657860008201527f7065637465640000000000000000000000000000000000000000000000000000602082015250565b6000611165602683610e5b565b915061117082611109565b604082019050919050565b6000602082019050818103600083015261119481611158565b9050919050565b60006111a682610a32565b91506111b183610a32565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111e6576111e56110a6565b5b828201905092915050565b60006111fc82610a32565b915061120783610a32565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112405761123f6110a6565b5b828202905092915050565b6000819050919050565b61126661126182610b71565b61124b565b82525050565b600081905092915050565b82818337600083830152505050565b6000611292838561126c565b935061129f838584611277565b82840190509392505050565b60006112b78286611255565b6004820191506112c8828486611286565b9150819050949350505050565b7f436f756c64206e6f74207375636365737366756c6c792063616c6c207461726760008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000611331602283610e5b565b915061133c826112d5565b604082019050919050565b6000602082019050818103600083015261136081611324565b9050919050565b600060608201905061137c6000830186610cb1565b6113896020830185610cb1565b6113966040830184610bc7565b949350505050565b7f436f756c64206e6f7420726566756e642073656e646572000000000000000000600082015250565b60006113d4601783610e5b565b91506113df8261139e565b602082019050919050565b60006020820190508181036000830152611403816113c7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611466602683610e5b565b91506114718261140a565b604082019050919050565b6000602082019050818103600083015261149581611459565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114d2602083610e5b565b91506114dd8261149c565b602082019050919050565b60006020820190508181036000830152611501816114c5565b905091905056fea264697066735822122095c16676278acc67e79aecc9dc6150bb40d04245d0d61dd75140b7ade2803b1a64736f6c63430008090033",
  "devdoc": {
    "author": "Uxío Fuentefría - <uxio@safe.global>",
    "custom:experimental": "This is an experimental contract.",
    "kind": "dev",
    "methods": {
      "changeMaxPriorityFee(uint256)": {
        "params": {
          "_maxPriorityFee": "New MaxPriorityFee clients will be paying"
        }
      },
      "changeRelayerFee(uint256)": {
        "params": {
          "_relayerFee": "New Relayer fee"
        }
      },
      "changeToken(address)": {
        "params": {
          "_token": "New token for paying refunds"
        }
      },
      "constructor": {
        "details": "Init contract"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverFunds(address,address)": {
        "details": "Ether recovery is not implemented as contract is not payable",
        "params": {
          "target": "destination for the funds",
          "withdrawToken": "token to recover"
        }
      },
      "relay(address,bytes,address)": {
        "details": "It's responsability of the sender to check if the Safe has enough funds to pay",
        "params": {
          "functionData": "ABI encoded Safe `execTransaction` without the method selector",
          "target": "destination for the refund"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setup(address,uint256,uint256,bytes4)": {
        "details": "Init contract",
        "params": {
          "_maxPriorityFee": "MaxPriorityFee clients will be paying, so relayer cannot be abused to drain user funds",
          "_method": "Method id that will be called on the Safe",
          "_relayerFee": "Relayer fee that will be added to the gasPrice when calculating refunds",
          "_token": "Token for paying refunds. Should be the wrapped version of the base currency (e.g. WETH for mainnet)"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Safe Relayer - A relayer for Safe multisig wallet",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "recoverFunds(address,address)": {
        "notice": "Recover tokens sent by mistake to this contract"
      },
      "relay(address,bytes,address)": {
        "notice": "Relay a transaction and get refunded"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 222,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)190"
      },
      {
        "astId": 224,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "maxPriorityFee",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 226,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "relayerFee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 228,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "method",
        "offset": 0,
        "slot": "4",
        "type": "t_bytes4"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IERC20)190": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}