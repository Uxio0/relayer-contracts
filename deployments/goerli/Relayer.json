{
  "address": "0x09e92CD1E1C193B5c692e25C9B259164EfC452eB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxPriorityFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_relayerFee",
          "type": "uint256"
        },
        {
          "internalType": "bytes4",
          "name": "_method",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxPriorityFee",
          "type": "uint256"
        }
      ],
      "name": "changeMaxPriorityFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_relayerFee",
          "type": "uint256"
        }
      ],
      "name": "changeRelayerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "changeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxPriorityFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "method",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "withdrawToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "recoverFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "functionData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "refundAccount",
          "type": "address"
        }
      ],
      "name": "relay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relayerFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x12d36729052267dfe0a98d9835974c319e74348f3011f10372e26761f154497f",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0x5aC255889882aCd3da2aA939679E3f3d4cea221e",
    "contractAddress": null,
    "transactionIndex": 3,
    "gasUsed": "1142027",
    "logsBloom": "0x
    "blockHash": "0x6cf0668a863d8089073dfc8f0dba785477f057c38cd468e76d938f6e1b9d28a3",
    "transactionHash": "0x12d36729052267dfe0a98d9835974c319e74348f3011f10372e26761f154497f",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 7259704,
        "transactionHash": "0x12d36729052267dfe0a98d9835974c319e74348f3011f10372e26761f154497f",
        "address": "0x09e92CD1E1C193B5c692e25C9B259164EfC452eB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c"
        ],
        "data": "0x",
        "logIndex": 4,
        "blockHash": "0x6cf0668a863d8089073dfc8f0dba785477f057c38cd468e76d938f6e1b9d28a3"
      },
      {
        "transactionIndex": 3,
        "blockNumber": 7259704,
        "transactionHash": "0x12d36729052267dfe0a98d9835974c319e74348f3011f10372e26761f154497f",
        "address": "0x09e92CD1E1C193B5c692e25C9B259164EfC452eB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c",
          "0x0000000000000000000000005ac255889882acd3da2aa939679e3f3d4cea221e"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x6cf0668a863d8089073dfc8f0dba785477f057c38cd468e76d938f6e1b9d28a3"
      }
    ],
    "blockNumber": 7259704,
    "cumulativeGasUsed": "1503709",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6",
    "2000000000",
    "0",
    "0x6a761202"
  ],
  "numDeployments": 1,
  "solcInputHash": "f228a52216dca9414f1e3cc928264658",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxPriorityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_relayerFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"_method\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPriorityFee\",\"type\":\"uint256\"}],\"name\":\"changeMaxPriorityFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_relayerFee\",\"type\":\"uint256\"}],\"name\":\"changeRelayerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPriorityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"method\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"withdrawToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"functionData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"refundAccount\",\"type\":\"address\"}],\"name\":\"relay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ux\\u00edo Fuentefr\\u00eda - <uxio@safe.global>\",\"custom:experimental\":\"This is an experimental contract.\",\"kind\":\"dev\",\"methods\":{\"changeMaxPriorityFee(uint256)\":{\"params\":{\"_maxPriorityFee\":\"New MaxPriorityFee clients will be paying\"}},\"changeRelayerFee(uint256)\":{\"params\":{\"_relayerFee\":\"New Relayer fee\"}},\"changeToken(address)\":{\"params\":{\"_token\":\"New token for paying refunds\"}},\"constructor\":{\"details\":\"Init contract\",\"params\":{\"_maxPriorityFee\":\"MaxPriorityFee clients will be paying, so relayer cannot be abused to drain user funds\",\"_method\":\"Method id that will be called on the Safe\",\"_relayerFee\":\"Relayer fee that will be added to the gasPrice when calculating refunds\",\"_token\":\"Token for paying refunds. Should be the wrapped version of the base currency (e.g. WETH for mainnet)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverFunds(address,address)\":{\"details\":\"Ether recovery is not implemented as contract is not payable\",\"params\":{\"target\":\"destination for the funds\",\"withdrawToken\":\"token to recover\"}},\"relay(address,bytes,address)\":{\"details\":\"It's responsability of the sender to check if the Safe has enough funds to pay\",\"params\":{\"functionData\":\"ABI encoded Safe `execTransaction` without the method selector\",\"target\":\"destination for the refund\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Safe Relayer - A relayer for Safe multisig wallet\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"recoverFunds(address,address)\":{\"notice\":\"Recover tokens sent by mistake to this contract\"},\"relay(address,bytes,address)\":{\"notice\":\"Relay a transaction and get refunded\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Relayer.sol\":\"Relayer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Relayer.sol\":{\"content\":\"// SPDX-License-Identifier: LGPL-3.0\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/// @title Safe Relayer - A relayer for Safe multisig wallet\\n/// @author Ux\\u00edo Fuentefr\\u00eda - <uxio@safe.global>\\n/// @custom:experimental This is an experimental contract.\\ncontract Relayer is Ownable {\\n    IERC20 public token;\\n    uint256 public maxPriorityFee;\\n    uint256 public relayerFee;\\n    bytes4 public method;\\n\\n    /// @dev Init contract\\n    /// @param _token Token for paying refunds. Should be the wrapped version of the base currency (e.g. WETH for mainnet)\\n    /// @param _maxPriorityFee MaxPriorityFee clients will be paying, so relayer cannot be abused to drain user funds\\n    /// @param _relayerFee Relayer fee that will be added to the gasPrice when calculating refunds\\n    /// @param _method Method id that will be called on the Safe\\n    constructor(\\n        IERC20 _token,\\n        uint256 _maxPriorityFee,\\n        uint256 _relayerFee,\\n        bytes4 _method\\n    ) {\\n        require(address(_token) != address(0), \\\"Token cannot be empty\\\");\\n\\n        require(_maxPriorityFee > 0, \\\"MaxPriorityFee must be higher than 0\\\");\\n\\n        token = _token;\\n        maxPriorityFee = _maxPriorityFee;\\n        relayerFee = _relayerFee;\\n        method = _method;\\n        // Prevent issues with deterministic deployment\\n        // solhint-disable-next-line avoid-tx-origin\\n        transferOwnership(tx.origin);\\n    }\\n\\n    /// @param _token New token for paying refunds\\n    function changeToken(IERC20 _token) public onlyOwner {\\n        token = _token;\\n    }\\n\\n    /// @param _maxPriorityFee New MaxPriorityFee clients will be paying\\n    function changeMaxPriorityFee(uint256 _maxPriorityFee) public onlyOwner {\\n        maxPriorityFee = _maxPriorityFee;\\n    }\\n\\n    /// @param _relayerFee New Relayer fee\\n    function changeRelayerFee(uint256 _relayerFee) public onlyOwner {\\n        relayerFee = _relayerFee;\\n    }\\n\\n    /// @notice Recover tokens sent by mistake to this contract\\n    /// @dev Ether recovery is not implemented as contract is not payable\\n    /// @param withdrawToken token to recover\\n    /// @param target destination for the funds\\n    function recoverFunds(IERC20 withdrawToken, address target)\\n        public\\n        onlyOwner\\n    {\\n        withdrawToken.transfer(target, withdrawToken.balanceOf(address(this)));\\n    }\\n\\n    /// @notice Relay a transaction and get refunded\\n    /// @dev It's responsability of the sender to check if the Safe has enough funds to pay\\n    /// @param target Safe to call\\n    /// @param functionData ABI encoded Safe `execTransaction` without the method selector\\n    /// @param target destination for the refund\\n    function relay(\\n        address target,\\n        bytes calldata functionData,\\n        address refundAccount\\n    ) external {\\n        // 9k are for the token transfers + 21k base + data (8 bytes method + 32 bytes address + data)\\n        // We will use 14 as the gas price per data byte, to avoid overcharging too much\\n        uint256 gas = gasleft();\\n        uint256 txMaxPriorityFee = tx.gasprice - block.basefee;\\n        require(\\n            txMaxPriorityFee <= maxPriorityFee,\\n            \\\"maxPriorityFee is higher than expected\\\"\\n        );\\n\\n        uint256 additionalGas = 30000 + (40 + functionData.length) * 14;\\n        uint256 gasPrice = tx.gasprice + relayerFee;\\n\\n        // The method id is appended by the contract to avoid that another method is called\\n        bytes memory data = abi.encodePacked(method, functionData);\\n        bool success;\\n        // Assembly reduced the costs by 400 gas\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            success := call(\\n                sub(gas(), 12000),\\n                target,\\n                0,\\n                add(data, 0x20),\\n                mload(data),\\n                0,\\n                0\\n            )\\n        }\\n        require(success, \\\"Could not successfully call target\\\");\\n\\n        // It's responsability of the sender to check if the Safe has enough funds to pay\\n        address refundTarget = refundAccount == address(0)\\n            ? msg.sender\\n            : refundAccount;\\n        require(\\n            token.transferFrom(\\n                target,\\n                refundTarget,\\n                (gas - gasleft() + additionalGas) * gasPrice\\n            ),\\n            \\\"Could not refund sender\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xfa55e779826f9c226f94f44299cf76f223d1cb2232b64d6bd5d3ec3b545ca390\",\"license\":\"LGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620018f1380380620018f18339818101604052810190620000379190620004cb565b620000576200004b6200019860201b60201c565b620001a060201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415620000ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c1906200059e565b60405180910390fd5b6000831162000110576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001079062000636565b60405180910390fd5b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826002819055508160038190555080600460006101000a81548163ffffffff021916908360e01c02179055506200018e326200026460201b60201c565b5050505062000762565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b62000274620002fb60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620002e7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002de90620006ce565b60405180910390fd5b620002f881620001a060201b60201c565b50565b6200030b6200019860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620003316200038c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200038a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003819062000740565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003e782620003ba565b9050919050565b6000620003fb82620003da565b9050919050565b6200040d81620003ee565b81146200041957600080fd5b50565b6000815190506200042d8162000402565b92915050565b6000819050919050565b620004488162000433565b81146200045457600080fd5b50565b60008151905062000468816200043d565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b620004a5816200046e565b8114620004b157600080fd5b50565b600081519050620004c5816200049a565b92915050565b60008060008060808587031215620004e857620004e7620003b5565b5b6000620004f8878288016200041c565b94505060206200050b8782880162000457565b93505060406200051e8782880162000457565b92505060606200053187828801620004b4565b91505092959194509250565b600082825260208201905092915050565b7f546f6b656e2063616e6e6f7420626520656d7074790000000000000000000000600082015250565b6000620005866015836200053d565b915062000593826200054e565b602082019050919050565b60006020820190508181036000830152620005b98162000577565b9050919050565b7f4d61785072696f72697479466565206d7573742062652068696768657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b60006200061e6024836200053d565b91506200062b82620005c0565b604082019050919050565b6000602082019050818103600083015262000651816200060f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000620006b66026836200053d565b9150620006c38262000658565b604082019050919050565b60006020820190508181036000830152620006e981620006a7565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620007286020836200053d565b91506200073582620006f0565b602082019050919050565b600060208201905081810360008301526200075b8162000719565b9050919050565b61117f80620007726000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a61461016557806380184e121461016f5780638da5cb5b1461018d578063b51f5e92146101ab578063f2fde38b146101c7578063fc0c546a146101e3576100b4565b8063127b5c7f146100b957806317d026e6146100d557806324ae6a27146100f15780632c383a9f1461010d5780632fdeb1111461012b57806366829b1614610149575b600080fd5b6100d360048036038101906100ce91906108a6565b610201565b005b6100ef60048036038101906100ea91906108a6565b610213565b005b61010b6004803603810190610106919061096f565b610225565b005b610115610347565b60405161012291906109ea565b60405180910390f35b61013361035a565b6040516101409190610a14565b60405180910390f35b610163600480360381019061015e9190610a2f565b610360565b005b61016d6103ac565b005b6101776103c0565b6040516101849190610a14565b60405180910390f35b6101956103c6565b6040516101a29190610a6b565b60405180910390f35b6101c560048036038101906101c09190610aeb565b6103ef565b005b6101e160048036038101906101dc9190610b5f565b610672565b005b6101eb6106f6565b6040516101f89190610beb565b60405180910390f35b61020961071c565b8060028190555050565b61021b61071c565b8060038190555050565b61022d61071c565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102839190610a6b565b60206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610c1b565b6040518363ffffffff1660e01b81526004016102f0929190610c48565b602060405180830381600087803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610ca9565b505050565b600460009054906101000a900460e01b81565b60035481565b61036861071c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103b461071c565b6103be600061079a565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60005a90506000483a6104029190610d05565b9050600254811115610449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044090610dbc565b60405180910390fd5b6000600e86869050602861045d9190610ddc565b6104679190610e32565b6175306104749190610ddc565b905060006003543a6104869190610ddc565b90506000600460009054906101000a900460e01b88886040516020016104ae93929190610eec565b6040516020818303038152906040529050600080600083516020850160008e612ee05a03f1905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610f88565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146105505787610552565b335b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8c8387895a8d6105a29190610d05565b6105ac9190610ddc565b6105b69190610e32565b6040518463ffffffff1660e01b81526004016105d493929190610fa8565b602060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106269190610ca9565b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c9061102b565b60405180910390fd5b5050505050505050505050565b61067a61071c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e1906110bd565b60405180910390fd5b6106f38161079a565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61072461085e565b73ffffffffffffffffffffffffffffffffffffffff166107426103c6565b73ffffffffffffffffffffffffffffffffffffffff1614610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611129565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000819050919050565b61088381610870565b811461088e57600080fd5b50565b6000813590506108a08161087a565b92915050565b6000602082840312156108bc576108bb610866565b5b60006108ca84828501610891565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108fe826108d3565b9050919050565b6000610910826108f3565b9050919050565b61092081610905565b811461092b57600080fd5b50565b60008135905061093d81610917565b92915050565b61094c816108f3565b811461095757600080fd5b50565b60008135905061096981610943565b92915050565b6000806040838503121561098657610985610866565b5b60006109948582860161092e565b92505060206109a58582860161095a565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109e4816109af565b82525050565b60006020820190506109ff60008301846109db565b92915050565b610a0e81610870565b82525050565b6000602082019050610a296000830184610a05565b92915050565b600060208284031215610a4557610a44610866565b5b6000610a538482850161092e565b91505092915050565b610a65816108f3565b82525050565b6000602082019050610a806000830184610a5c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610aab57610aaa610a86565b5b8235905067ffffffffffffffff811115610ac857610ac7610a8b565b5b602083019150836001820283011115610ae457610ae3610a90565b5b9250929050565b60008060008060608587031215610b0557610b04610866565b5b6000610b138782880161095a565b945050602085013567ffffffffffffffff811115610b3457610b3361086b565b5b610b4087828801610a95565b93509350506040610b538782880161095a565b91505092959194509250565b600060208284031215610b7557610b74610866565b5b6000610b838482850161095a565b91505092915050565b6000819050919050565b6000610bb1610bac610ba7846108d3565b610b8c565b6108d3565b9050919050565b6000610bc382610b96565b9050919050565b6000610bd582610bb8565b9050919050565b610be581610bca565b82525050565b6000602082019050610c006000830184610bdc565b92915050565b600081519050610c158161087a565b92915050565b600060208284031215610c3157610c30610866565b5b6000610c3f84828501610c06565b91505092915050565b6000604082019050610c5d6000830185610a5c565b610c6a6020830184610a05565b9392505050565b60008115159050919050565b610c8681610c71565b8114610c9157600080fd5b50565b600081519050610ca381610c7d565b92915050565b600060208284031215610cbf57610cbe610866565b5b6000610ccd84828501610c94565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1082610870565b9150610d1b83610870565b925082821015610d2e57610d2d610cd6565b5b828203905092915050565b600082825260208201905092915050565b7f6d61785072696f7269747946656520697320686967686572207468616e20657860008201527f7065637465640000000000000000000000000000000000000000000000000000602082015250565b6000610da6602683610d39565b9150610db182610d4a565b604082019050919050565b60006020820190508181036000830152610dd581610d99565b9050919050565b6000610de782610870565b9150610df283610870565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2757610e26610cd6565b5b828201905092915050565b6000610e3d82610870565b9150610e4883610870565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8157610e80610cd6565b5b828202905092915050565b6000819050919050565b610ea7610ea2826109af565b610e8c565b82525050565b600081905092915050565b82818337600083830152505050565b6000610ed38385610ead565b9350610ee0838584610eb8565b82840190509392505050565b6000610ef88286610e96565b600482019150610f09828486610ec7565b9150819050949350505050565b7f436f756c64206e6f74207375636365737366756c6c792063616c6c207461726760008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f72602283610d39565b9150610f7d82610f16565b604082019050919050565b60006020820190508181036000830152610fa181610f65565b9050919050565b6000606082019050610fbd6000830186610a5c565b610fca6020830185610a5c565b610fd76040830184610a05565b949350505050565b7f436f756c64206e6f7420726566756e642073656e646572000000000000000000600082015250565b6000611015601783610d39565b915061102082610fdf565b602082019050919050565b6000602082019050818103600083015261104481611008565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110a7602683610d39565b91506110b28261104b565b604082019050919050565b600060208201905081810360008301526110d68161109a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611113602083610d39565b915061111e826110dd565b602082019050919050565b6000602082019050818103600083015261114281611106565b905091905056fea2646970667358221220ade510e8f0a2b7b62081c643a839e8450d924f8cb0c90651459b21d20b9c002e64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a61461016557806380184e121461016f5780638da5cb5b1461018d578063b51f5e92146101ab578063f2fde38b146101c7578063fc0c546a146101e3576100b4565b8063127b5c7f146100b957806317d026e6146100d557806324ae6a27146100f15780632c383a9f1461010d5780632fdeb1111461012b57806366829b1614610149575b600080fd5b6100d360048036038101906100ce91906108a6565b610201565b005b6100ef60048036038101906100ea91906108a6565b610213565b005b61010b6004803603810190610106919061096f565b610225565b005b610115610347565b60405161012291906109ea565b60405180910390f35b61013361035a565b6040516101409190610a14565b60405180910390f35b610163600480360381019061015e9190610a2f565b610360565b005b61016d6103ac565b005b6101776103c0565b6040516101849190610a14565b60405180910390f35b6101956103c6565b6040516101a29190610a6b565b60405180910390f35b6101c560048036038101906101c09190610aeb565b6103ef565b005b6101e160048036038101906101dc9190610b5f565b610672565b005b6101eb6106f6565b6040516101f89190610beb565b60405180910390f35b61020961071c565b8060028190555050565b61021b61071c565b8060038190555050565b61022d61071c565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102839190610a6b565b60206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610c1b565b6040518363ffffffff1660e01b81526004016102f0929190610c48565b602060405180830381600087803b15801561030a57600080fd5b505af115801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610ca9565b505050565b600460009054906101000a900460e01b81565b60035481565b61036861071c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103b461071c565b6103be600061079a565b565b60025481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60005a90506000483a6104029190610d05565b9050600254811115610449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044090610dbc565b60405180910390fd5b6000600e86869050602861045d9190610ddc565b6104679190610e32565b6175306104749190610ddc565b905060006003543a6104869190610ddc565b90506000600460009054906101000a900460e01b88886040516020016104ae93929190610eec565b6040516020818303038152906040529050600080600083516020850160008e612ee05a03f1905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610f88565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146105505787610552565b335b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8c8387895a8d6105a29190610d05565b6105ac9190610ddc565b6105b69190610e32565b6040518463ffffffff1660e01b81526004016105d493929190610fa8565b602060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106269190610ca9565b610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c9061102b565b60405180910390fd5b5050505050505050505050565b61067a61071c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e1906110bd565b60405180910390fd5b6106f38161079a565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61072461085e565b73ffffffffffffffffffffffffffffffffffffffff166107426103c6565b73ffffffffffffffffffffffffffffffffffffffff1614610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611129565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b6000819050919050565b61088381610870565b811461088e57600080fd5b50565b6000813590506108a08161087a565b92915050565b6000602082840312156108bc576108bb610866565b5b60006108ca84828501610891565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108fe826108d3565b9050919050565b6000610910826108f3565b9050919050565b61092081610905565b811461092b57600080fd5b50565b60008135905061093d81610917565b92915050565b61094c816108f3565b811461095757600080fd5b50565b60008135905061096981610943565b92915050565b6000806040838503121561098657610985610866565b5b60006109948582860161092e565b92505060206109a58582860161095a565b9150509250929050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6109e4816109af565b82525050565b60006020820190506109ff60008301846109db565b92915050565b610a0e81610870565b82525050565b6000602082019050610a296000830184610a05565b92915050565b600060208284031215610a4557610a44610866565b5b6000610a538482850161092e565b91505092915050565b610a65816108f3565b82525050565b6000602082019050610a806000830184610a5c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610aab57610aaa610a86565b5b8235905067ffffffffffffffff811115610ac857610ac7610a8b565b5b602083019150836001820283011115610ae457610ae3610a90565b5b9250929050565b60008060008060608587031215610b0557610b04610866565b5b6000610b138782880161095a565b945050602085013567ffffffffffffffff811115610b3457610b3361086b565b5b610b4087828801610a95565b93509350506040610b538782880161095a565b91505092959194509250565b600060208284031215610b7557610b74610866565b5b6000610b838482850161095a565b91505092915050565b6000819050919050565b6000610bb1610bac610ba7846108d3565b610b8c565b6108d3565b9050919050565b6000610bc382610b96565b9050919050565b6000610bd582610bb8565b9050919050565b610be581610bca565b82525050565b6000602082019050610c006000830184610bdc565b92915050565b600081519050610c158161087a565b92915050565b600060208284031215610c3157610c30610866565b5b6000610c3f84828501610c06565b91505092915050565b6000604082019050610c5d6000830185610a5c565b610c6a6020830184610a05565b9392505050565b60008115159050919050565b610c8681610c71565b8114610c9157600080fd5b50565b600081519050610ca381610c7d565b92915050565b600060208284031215610cbf57610cbe610866565b5b6000610ccd84828501610c94565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1082610870565b9150610d1b83610870565b925082821015610d2e57610d2d610cd6565b5b828203905092915050565b600082825260208201905092915050565b7f6d61785072696f7269747946656520697320686967686572207468616e20657860008201527f7065637465640000000000000000000000000000000000000000000000000000602082015250565b6000610da6602683610d39565b9150610db182610d4a565b604082019050919050565b60006020820190508181036000830152610dd581610d99565b9050919050565b6000610de782610870565b9150610df283610870565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e2757610e26610cd6565b5b828201905092915050565b6000610e3d82610870565b9150610e4883610870565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8157610e80610cd6565b5b828202905092915050565b6000819050919050565b610ea7610ea2826109af565b610e8c565b82525050565b600081905092915050565b82818337600083830152505050565b6000610ed38385610ead565b9350610ee0838584610eb8565b82840190509392505050565b6000610ef88286610e96565b600482019150610f09828486610ec7565b9150819050949350505050565b7f436f756c64206e6f74207375636365737366756c6c792063616c6c207461726760008201527f6574000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f72602283610d39565b9150610f7d82610f16565b604082019050919050565b60006020820190508181036000830152610fa181610f65565b9050919050565b6000606082019050610fbd6000830186610a5c565b610fca6020830185610a5c565b610fd76040830184610a05565b949350505050565b7f436f756c64206e6f7420726566756e642073656e646572000000000000000000600082015250565b6000611015601783610d39565b915061102082610fdf565b602082019050919050565b6000602082019050818103600083015261104481611008565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110a7602683610d39565b91506110b28261104b565b604082019050919050565b600060208201905081810360008301526110d68161109a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611113602083610d39565b915061111e826110dd565b602082019050919050565b6000602082019050818103600083015261114281611106565b905091905056fea2646970667358221220ade510e8f0a2b7b62081c643a839e8450d924f8cb0c90651459b21d20b9c002e64736f6c63430008090033",
  "devdoc": {
    "author": "Uxío Fuentefría - <uxio@safe.global>",
    "custom:experimental": "This is an experimental contract.",
    "kind": "dev",
    "methods": {
      "changeMaxPriorityFee(uint256)": {
        "params": {
          "_maxPriorityFee": "New MaxPriorityFee clients will be paying"
        }
      },
      "changeRelayerFee(uint256)": {
        "params": {
          "_relayerFee": "New Relayer fee"
        }
      },
      "changeToken(address)": {
        "params": {
          "_token": "New token for paying refunds"
        }
      },
      "constructor": {
        "details": "Init contract",
        "params": {
          "_maxPriorityFee": "MaxPriorityFee clients will be paying, so relayer cannot be abused to drain user funds",
          "_method": "Method id that will be called on the Safe",
          "_relayerFee": "Relayer fee that will be added to the gasPrice when calculating refunds",
          "_token": "Token for paying refunds. Should be the wrapped version of the base currency (e.g. WETH for mainnet)"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverFunds(address,address)": {
        "details": "Ether recovery is not implemented as contract is not payable",
        "params": {
          "target": "destination for the funds",
          "withdrawToken": "token to recover"
        }
      },
      "relay(address,bytes,address)": {
        "details": "It's responsability of the sender to check if the Safe has enough funds to pay",
        "params": {
          "functionData": "ABI encoded Safe `execTransaction` without the method selector",
          "target": "destination for the refund"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Safe Relayer - A relayer for Safe multisig wallet",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "recoverFunds(address,address)": {
        "notice": "Recover tokens sent by mistake to this contract"
      },
      "relay(address,bytes,address)": {
        "notice": "Relay a transaction and get refunded"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 222,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)190"
      },
      {
        "astId": 224,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "maxPriorityFee",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 226,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "relayerFee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 228,
        "contract": "contracts/Relayer.sol:Relayer",
        "label": "method",
        "offset": 0,
        "slot": "4",
        "type": "t_bytes4"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(IERC20)190": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}